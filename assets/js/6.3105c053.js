(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{209:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("p",[t._v("We recommend adding swagger-php to your project with "),s("a",{attrs:{href:"https://getcomposer.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Composer"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("composer require zircote/swagger-php\n")])])]),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("p",[t._v("Generate always-up-to-date documentation.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"vendor/autoload.php"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$openapi")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("OpenApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("scan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/path/to/project'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Content-Type: application/x-yaml'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$openapi")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toYaml")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("p",[t._v("This will scan the php-files in the given folder(s), look for OpenApi annotations and output a json file.")]),t._v(" "),s("h2",{attrs:{id:"cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[t._v("#")]),t._v(" CLI")]),t._v(" "),s("p",[t._v("Instead of generating the documentation dynamically we also provide a command line interface.\nThis writes the documentation to a static json file.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("./vendor/bin/openapi --help\n")])])]),s("p",[t._v("For cli usage from anywhere install swagger-php globally and add the "),s("code",[t._v("~/.composer/vendor/bin")]),t._v(" directory to the PATH in your environment.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("composer global require zircote/swagger-php\n")])])]),s("h2",{attrs:{id:"write-annotations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#write-annotations"}},[t._v("#")]),t._v(" Write annotations")]),t._v(" "),s("p",[t._v("The goal of swagger-php is to generate a openapi.json using phpdoc annotations.")]),t._v(" "),s("h4",{attrs:{id:"when-you-write"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#when-you-write"}},[t._v("#")]),t._v(" When you write:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Info(title="My First API", version="0.1")\n */')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Get(\n *     path="/api/resource.json",\n *     @OA\\Response(response="200", description="An example resource")\n * )\n */')]),t._v("\n")])])]),s("h4",{attrs:{id:"swagger-php-will-generate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#swagger-php-will-generate"}},[t._v("#")]),t._v(" swagger-php will generate:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openapi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.0.0\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My First API"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("/api/resource.json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"200"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"An example resource"')]),t._v("\n")])])]),s("h3",{attrs:{id:"using-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-variables"}},[t._v("#")]),t._v(" Using variables")]),t._v(" "),s("p",[t._v("You can use constants inside doctrine annotations.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"API_HOST"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"production"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"example.com"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @OA\\Server(url=API_HOST)\n */")]),t._v("\n")])])]),s("p",[t._v("When you're using the CLI you'll need to include the php file with the constants using the "),s("code",[t._v("--bootstrap")]),t._v(" options:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("openapi --bootstrap constants.php\n")])])]),s("h3",{attrs:{id:"annotation-placement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotation-placement"}},[t._v("#")]),t._v(" Annotation placement")]),t._v(" "),s("p",[t._v("You shouldn't place all annotations inside one big @OA\\OpenApi() annotation block, but scatter them throughout your codebase.\nswagger-php will scan your project and merge all annotations into one @OA\\OpenApi annotation.")]),t._v(" "),s("p",[t._v("The big benefit swagger-php provides is that the documentation lives close to the code implementing the API.")]),t._v(" "),s("h3",{attrs:{id:"arrays-and-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arrays-and-objects"}},[t._v("#")]),t._v(" Arrays and Objects")]),t._v(" "),s("p",[t._v("Doctrine annotation supports arrays, but uses "),s("code",[t._v("{")]),t._v(" and "),s("code",[t._v("}")]),t._v(" instead of "),s("code",[t._v("[")]),t._v(" and "),s("code",[t._v("]")]),t._v(".")]),t._v(" "),s("p",[t._v("Doctrine also supports objects, which also use "),s("code",[t._v("{")]),t._v(" and "),s("code",[t._v("}")]),t._v(" and require the property names to be surrounded with "),s("code",[t._v('"')]),t._v(".")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("DON'T WRITE")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Info(\n *   title="My first API",\n *   version="1.0.0",\n *   contact={\n *     "email": "support@example.com"\n *   }\n * )\n */')]),t._v("\n")])])])]),t._v(" "),s("p",[t._v('This "works" but most objects have an annotation with the same name as the property, such as '),s("code",[t._v("@OA\\Contact")]),t._v(" for "),s("code",[t._v("contact")]),t._v(":")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WRITE")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Info(\n *   title="My first API",\n *   version="1.0.0",\n *   @OA\\Contact(\n *     email="support@example.com"\n *   )\n * )\n */')]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("This also adds validation, so when you misspell a property or forget a required property, it will trigger a PHP warning.\nFor example, if you write "),s("code",[t._v('emial="support@example.com"')]),t._v(", swagger-php would generate a notice with "),s("code",[t._v('Unexpected field "emial" for @OA\\Contact(), expecting "name", "email", ...')])]),t._v(" "),s("p",[t._v("Placing multiple annotations of the same type will result in an array of objects.\nFor objects, the key is defined by the field with the same name as the annotation: "),s("code",[t._v("response")]),t._v(" in a "),s("code",[t._v("@OA\\Response")]),t._v(", "),s("code",[t._v("property")]),t._v(" in a "),s("code",[t._v("@OA\\Property")]),t._v(", etc.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Get(\n *   path="/products",\n *   summary="list products",\n *   @OA\\Response(\n *     response=200,\n *     description="A list with products"\n *   ),\n *   @OA\\Response(\n *     response="default",\n *     description="an ""unexpected"" error"\n *   )\n * )\n */')]),t._v("\n")])])]),s("h4",{attrs:{id:"results-in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#results-in"}},[t._v("#")]),t._v(" Results in:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openapi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.0.0\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("/products")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("summary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list products"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"200"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A list with products"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'an \"unexpected\" error'")]),t._v("\n")])])]),s("h3",{attrs:{id:"detects-values-based-on-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#detects-values-based-on-context"}},[t._v("#")]),t._v(" Detects values based on context")]),t._v(" "),s("p",[t._v("swagger-php looks at the context of the comment which reduces duplication.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @OA\\Schema()\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * The product name\n     * @var string\n     * @OA\\Property()\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"results-in-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#results-in-2"}},[t._v("#")]),t._v(" Results in:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openapi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.0.0\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schemas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The product name"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" object\n")])])]),s("h4",{attrs:{id:"as-if-you-d-written"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-if-you-d-written"}},[t._v("#")]),t._v(" As if you'd written:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n     * The product name\n     * @var string\n     *\n     * @OA\\Property(\n     *   property="name",\n     *   type="string",\n     *   description="The product name"\n     * )\n     */')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"shortcuts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shortcuts"}},[t._v("#")]),t._v(" Shortcuts")]),t._v(" "),s("h4",{attrs:{id:"anotation-namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anotation-namespace"}},[t._v("#")]),t._v(" Anotation namespace")]),t._v(" "),s("p",[t._v("Instead of writing the "),s("abbr",{attrs:{title:"Full Qualified Class Name"}},[t._v("FQCN")]),t._v(": "),s("code",[t._v("@OpenApi\\Annotations\\Response()")]),t._v(" you can write the shorter "),s("code",[t._v("@OA\\Response()")]),t._v(" instead.")]),t._v(" "),s("p",[t._v("This works because doctrine picks up on the use statements like:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("OpenApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Annotations")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("And swagger-php injects this namespace alias, even when it's not in the php file."),s("br"),t._v("\nBut if your editor supports doctrine annotation completion, you still need to add the namespace alias otherwise it can't find the annotation classes for autocompletion.")]),t._v(" "),s("h4",{attrs:{id:"json-or-xml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-or-xml"}},[t._v("#")]),t._v(" Json or Xml")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("@OA\\MediaType")]),t._v(" is used to describe the content:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Response(\n *     response=200,\n *     description="successful operation",\n *     @OA\\MediaType(\n *         mediaType="application/json",\n *         @OA\\Schema(ref="#/components/schemas/User"),\n *     )\n * ),\n */')]),t._v("\n")])])]),s("p",[t._v("But because most API requests and responses are JSON, the "),s("code",[t._v("@OA\\JsonContent")]),t._v(" allows you to write:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Response(\n *     response=200,\n *     description="successful operation",\n *     @OA\\JsonContent(ref="#/components/schemas/User"),\n * )\n */')]),t._v("\n")])])]),s("p",[t._v("During processing the "),s("code",[t._v("@OA\\JsonContent")]),t._v(" unfolds to "),s("code",[t._v('@OA\\MediaType( mediaType="application/json", @OA\\Schema(')]),t._v("\nand will generate the same output.")]),t._v(" "),s("p",[t._v("On a similar note, you generally don't have to write a "),s("code",[t._v("@OA\\PathItem")]),t._v(" because this annotation will be generated based on the path in operation "),s("code",[t._v("@OA\\Get")]),t._v(", "),s("code",[t._v("@OA\\Post")]),t._v(", etc.")]),t._v(" "),s("h2",{attrs:{id:"reusing-annotations-ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reusing-annotations-ref"}},[t._v("#")]),t._v(" Reusing annotations (ref)")]),t._v(" "),s("p",[t._v("It's common that multiple requests have some overlap in either the request or the response.\nTo keep things DRY (Don't Repeat Yourself) the specification includes referencing other parts of the JSON using "),s("code",[t._v("$ref")]),t._v("s")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Schema(\n *   schema="product_id",\n *   type="integer",\n *   format="int64",\n *   description="The unique identifier of a product in our catalog"\n * )\n */')]),t._v("\n")])])]),s("h4",{attrs:{id:"results-in-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#results-in-3"}},[t._v("#")]),t._v(" Results in:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openapi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.0.0\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schemas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("product_id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The unique identifier of a product in our catalog"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" integer\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int64\n")])])]),s("p",[t._v("This doesn't do anything by itself, but now you can reference this piece by its path in the JSON "),s("code",[t._v("#/components/schemas/product_id")])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n     * @OA\\Property(ref="#/components/schemas/product_id")\n     */')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("For more tips on refs, browse through the "),s("a",{attrs:{href:"https://github.com/zircote/swagger-php/tree/master/Examples/using-refs",target:"_blank",rel:"noopener noreferrer"}},[t._v("using-refs example"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"composition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#composition"}},[t._v("#")]),t._v(" Composition")]),t._v(" "),s("p",[t._v("You can combine model definitions into new schema compositions with "),s("a",{attrs:{href:"https://swagger.io/specification/#schemaComposition",target:"_blank",rel:"noopener noreferrer"}},[t._v("allOf"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Schema(\n *   schema="UpdateItem",\n *   allOf={\n *     @OA\\Schema(ref="#/components/schemas/NewItem"),\n *     @OA\\Schema(\n *       @OA\\Property(property="id", type="integer"),\n *       @OA\\Property(property="created_at", ref="#/components/schemas/BaseModel/properties/createdAt")\n *     )\n *   }\n * )\n */')]),t._v("\n")])])]),s("p",[t._v("More info in the "),s("a",{attrs:{href:"https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Inheritance and Polymorphism"),s("OutboundLink")],1),t._v(" chapter.")]),t._v(" "),s("h2",{attrs:{id:"vendor-extensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vendor-extensions"}},[t._v("#")]),t._v(" Vendor extensions")]),t._v(" "),s("p",[t._v("The specification allows for "),s("a",{attrs:{href:"http://swagger.io/specification/#vendorExtensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("custom properties"),s("OutboundLink")],1),t._v(' as long as they start with "x-". Therefore all swagger-php annotations have an '),s("code",[t._v("x")]),t._v(' property which will unfold into "x-" properties.')]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @OA\\Info(\n *   title="Example",\n *   version=1,\n *   x={\n *     "some-name": "a-value",\n *     "another": 2,\n *     "complex-type": {\n *       "supported":{\n *         {"version": "1.0", "level": "baseapi"},\n *         {"version": "2.1", "level": "fullapi"},\n *       }\n *     }\n *   }\n * )\n */')]),t._v("\n")])])]),s("h4",{attrs:{id:"results-in-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#results-in-4"}},[t._v("#")]),t._v(" Results in:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openapi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.0.0\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Example\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("x-some-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("value\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("x-another")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("x-complex-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("supported")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" baseapi\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.1"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fullapi\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Amazon API Gateway"),s("OutboundLink")],1),t._v(" for example, makes use of these.")]),t._v(" "),s("h2",{attrs:{id:"openapi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openapi"}},[t._v("#")]),t._v(" OpenApi")]),t._v(" "),s("p",[t._v("To learn about what you can generate, which options to use and how, look at the "),s("a",{attrs:{href:"https://swagger.io/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs on swagger.io"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("It has sections about:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://swagger.io/docs/specification/basic-structure/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Basic structure"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://swagger.io/docs/specification/describing-parameters/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Describing parameters"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://swagger.io/docs/specification/describing-responses/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Describing responses"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("and "),s("a",{attrs:{href:"https://swagger.io/docs/specification/about/",target:"_blank",rel:"noopener noreferrer"}},[t._v("more"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("For more detailed information look at the "),s("a",{attrs:{href:"http://swagger.io/specification/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenApi Specification"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);